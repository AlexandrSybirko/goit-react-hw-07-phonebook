{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","redux/selectors.js","redux/actions.js","redux/operations.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","getContacts","state","contacts","items","getFilter","filter","getLoader","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","name","includes","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","contactsOperations","fetchContacts","dispatch","a","get","data","addContact","number","contact","post","deleteContact","id","delete","Section","title","children","className","s","section","ContactForm","useState","setName","setNumber","useSelector","useDispatch","handleChange","e","currentTarget","value","reset","form","onSubmit","preventDefault","find","alert","label","input","type","placeholder","onChange","button","ContactList","map","li","onClick","onDeleteContact","Filter","contactsActions","target","App","isFirstRender","useRef","loader","useEffect","current","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5c8164a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactList_name__1YAUG\",\"number\":\"ContactList_number__gmTRI\",\"button\":\"ContactList_button__7auk_\",\"li\":\"ContactList_li__3Sbjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2CleT\",\"input\":\"Filter_input__3eyXw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3QIXU\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoader = state => state.contacts.loading;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","import axios from 'axios';\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './actions';\r\n\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/contacts', contact);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  try {\r\n    await axios.delete(`/contacts/${id}`);\r\n    dispatch(deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(deleteContactError(error));\r\n  }\r\n};\r\n\r\n\r\nconst contactsOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\nexport default contactsOperations;","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css'\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <div className={s.section}>\r\n      <h2 className=\"\">{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import { useState } from 'react';\r\nimport s from './ContactForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport contactsOperations from 'redux/operations';\r\nimport { getContacts } from 'redux/selectors';\r\n\r\n\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n     if (contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts.`);\r\n      reset();\r\n      return;\r\n    }\r\n    dispatch(contactsOperations.addContact(name, number));\r\n    reset();\r\n  }  \r\n  \r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  } \r\n\r\n  \r\n    return (\r\n      <form\r\n      className={s.form}\r\n        onSubmit={handleSubmit}>\r\n        <label\r\n          className={s.label}>\r\n          Name\r\n          <input \r\n            className ={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n             placeholder=\"Go IT\"\r\n            onChange={handleChange}\r\n            \r\n          />\r\n        </label>\r\n        <label\r\n            className={s.label}     \r\n          >\r\n          Number\r\n          <input\r\n            className ={s.input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n             placeholder=\"000-000-000\"\r\n            onChange={handleChange}\r\n            \r\n          />\r\n        </label>\r\n\r\n        <button\r\n          className={s.button}\r\n          type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n\r\n\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport contactsOperations from 'redux/operations';\r\nimport { getVisibleContacts } from 'redux/selectors';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(contactsOperations.deleteContact(id));\r\n  \r\n  return (\r\n  <ul className=\"\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li\r\n        className={s.li}\r\n        key={id}>\r\n        <span className={s.name}>{name}:</span>\r\n        <span className={s.number}>{number}</span>\r\n        <button\r\n          className={s.button}\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n    </ul>\r\n    );\r\n}\r\n\r\n  \r\n\r\n","\r\nimport s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from 'redux/selectors';\r\nimport * as contactsActions from 'redux/actions';\r\n\r\n\r\nexport default function Filter()  {\r\nconst value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = e => dispatch(contactsActions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.filter}>\r\n    Find contacts by name\r\n    <input className= {s.input} type='text' value={value} onChange={onChange}  placeholder=\"Go IT\"/>\r\n  </label>\r\n  );\r\n};\r\n\r\n \r\n","import { useRef, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getLoader } from 'redux/selectors';\nimport contactsOperations from 'redux/operations';\n\n\n\nimport Section from './components/Section/Section';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\n\n\nexport default function App() {\n  \n  const dispatch = useDispatch();\n\n  const isFirstRender = useRef(true);\n  const onFirstLoad = () => dispatch(contactsOperations.fetchContacts());\n  const loader = useSelector(getLoader);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      onFirstLoad();\n\n      isFirstRender.current = false;\n      return;\n    }\n  },);\n\n  \n  \n    return (\n      <>\n      <Section title=\"Phonebook\">\n          <ContactForm />\n          {loader && <p>PLEASE WAIT</p>}\n      </Section>\n      <Section title=\"Phonebook\">\n      <Filter />\n          <ContactList />\n          </Section>\n      </>\n    );\n  }\n\n\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n   addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './reducers';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2YBNA\",\"button\":\"ContactForm_button__2Z1LE\",\"input\":\"ContactForm_input__1K0V0\",\"label\":\"ContactForm_label__2HlYG\"};"],"sourceRoot":""}